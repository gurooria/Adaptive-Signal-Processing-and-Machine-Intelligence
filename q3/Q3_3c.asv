%% Q3.3c
clc
clear
close all

% Intialisations
N = 1500;
n = 1:N;
fs = 2000;
var = 0.05;
noise = sqrt(var).*randn(1,N) + 1j*sqrt(var).*randn(1,N); % circular complex-valued white noise

% generate f(n)
f = [100*ones(1,500), 100 + ((501:1000)-500)/2, 100 + (((1001:1500)-1000)/25).^2];
phi = cumtrapz(f);

% generate y(n)
y = exp(1j*((2*pi)/fs)*phi) + noise;
L = 1024;
w = (0:(L-1)) .* (fs / L);
x = (1/L) * exp(1j * 2 * (0:N-1)' * pi * (0:(L-1))/L).';
gammas = [0,0.01,0.1,0.5];
mu = 1;
count = 1;

figure
hold on
for gammas = gammas
    %pre allocation for coefficinets, error and signal
    a = complex(zeros(1,N));  % need to change notation for psd code part
    e = complex(zeros(1,N));

    %implement clms algorithm 
    [a,e] = CLMS_dft(x,y,mu,gammas,L);
    H = abs(a);
    %Remove outliers in the matrix H
    medianH = 50*median(median(H));
    H(H > medianH) = medianH;

    subplot(2,2,count)
    surf(1:N, (0:(L-1)).*(fs/L), H, 'LineStyle','none');
    view(2)
    colorbar('TickLabelInterpreter', 'latex')
    xlabel('Time Index (n)','fontsize',15)
    ylabel('Frequency (Hz)','fontsize',15)
    title(sprintf('$\\gamma$ = %0.3f, $\\mu$ = 1',gammas),'Interpreter','latex','fontsize',15)
    ax = gca;
    ax.FontSize = 15;
    grid on
    grid minor
    ylim([0 700])
    count = count+1;
    hold on
end

sgtitle('Time Frequency Estimation using DFT-CLMS','Interpreter','latex','fontsize',20)
set(gcf,'color','w')